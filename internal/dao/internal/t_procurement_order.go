// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TProcurementOrderDao is the data access object for table t_procurement_order.
type TProcurementOrderDao struct {
	table   string                   // table is the underlying table name of the DAO.
	group   string                   // group is the database configuration group name of current DAO.
	columns TProcurementOrderColumns // columns contains all the column names of Table for convenient usage.
}

// TProcurementOrderColumns defines and stores column names for table t_procurement_order.
type TProcurementOrderColumns struct {
	Id                     string // id
	ProcurementId          string // 采购订单号
	OrderDetailLineNum     string // 订单详情行号
	Supplier               string // 供应商
	MaterialId             string // 物料编码
	MaterialName           string // 物料名称
	QuantityRequired       string // 需求数量
	QuantityInWarehouse    string // 已入库数量
	QuantityNotInWarehouse string // 未入库数量
	PurchasingUnit         string // 采购单位
	SettlementUnit         string // 结算单位
	PlanArrivalDate        string // 计划到货日期
	Status                 string // 入库操作 0 未入库 1入库
	CreatedAt              string // 创建时间
	UpdatedAt              string // 更新时间
	DeletedAt              string // 删除时间
}

//  tProcurementOrderColumns holds the columns for table t_procurement_order.
var tProcurementOrderColumns = TProcurementOrderColumns{
	Id:                     "id",
	ProcurementId:          "procurement_id",
	OrderDetailLineNum:     "order_detail_line_num",
	Supplier:               "supplier",
	MaterialId:             "material_id",
	MaterialName:           "material_name",
	QuantityRequired:       "quantity_required",
	QuantityInWarehouse:    "quantity_in_warehouse",
	QuantityNotInWarehouse: "quantity_not_in_warehouse",
	PurchasingUnit:         "purchasing_unit",
	SettlementUnit:         "settlement_unit",
	PlanArrivalDate:        "plan_arrival_date",
	Status:                 "status",
	CreatedAt:              "created_at",
	UpdatedAt:              "updated_at",
	DeletedAt:              "deleted_at",
}

// NewTProcurementOrderDao creates and returns a new DAO object for table data access.
func NewTProcurementOrderDao() *TProcurementOrderDao {
	return &TProcurementOrderDao{
		group:   "default",
		table:   "t_procurement_order",
		columns: tProcurementOrderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TProcurementOrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TProcurementOrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TProcurementOrderDao) Columns() TProcurementOrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TProcurementOrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TProcurementOrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TProcurementOrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
