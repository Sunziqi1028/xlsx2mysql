// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TProcessOutsourcingOrderDao is the data access object for table t_process_outsourcing_order.
type TProcessOutsourcingOrderDao struct {
	table   string                          // table is the underlying table name of the DAO.
	group   string                          // group is the database configuration group name of current DAO.
	columns TProcessOutsourcingOrderColumns // columns contains all the column names of Table for convenient usage.
}

// TProcessOutsourcingOrderColumns defines and stores column names for table t_process_outsourcing_order.
type TProcessOutsourcingOrderColumns struct {
	Id                     string // id
	ProcessOutsourcingId   string // 工序委外订单号
	ProductionId           string // 关联的生成订单号
	Supplier               string // 供应商
	OutputMaterialCode     string // 产出物料编码
	OutputMaterialName     string // 产出物料名称
	OutputRequiredQuantity string // 产出需求数量
	OutputUnit             string // 产出单位
	PlanedReceiveTime      string // 计划收货日期
	QuantityReceived       string // 已收货数量
	QuantityUnreceived     string // 未收货数量
	InputMaterialCode      string // 投入物料编码
	InputMaterialName      string // 投入物料名称
	InputRequiredQuantity  string // 投入需求数量
	InputRequiredUnit      string // 投入需求单位
	DeliveryQuantity       string // 已发货数量
	UndeliveryQuantity     string // 未发货数量
	PlanedDeliveryTime     string // 计划发货日期
	Note                   string // 备注
	OperationStatus        string // 操作： 0 现场发货 1 现场收货
	CreatedAt              string // 创建时间
	UpdatedAt              string // 更新时间
	DeletedAt              string // 删除时间
}

//  tProcessOutsourcingOrderColumns holds the columns for table t_process_outsourcing_order.
var tProcessOutsourcingOrderColumns = TProcessOutsourcingOrderColumns{
	Id:                     "id",
	ProcessOutsourcingId:   "process_outsourcing_id",
	ProductionId:           "production_id",
	Supplier:               "supplier",
	OutputMaterialCode:     "output_material_code",
	OutputMaterialName:     "output_material_name",
	OutputRequiredQuantity: "output_required_quantity",
	OutputUnit:             "output_unit",
	PlanedReceiveTime:      "planed_receive_time",
	QuantityReceived:       "quantity_received",
	QuantityUnreceived:     "quantity_unreceived",
	InputMaterialCode:      "input_material_code",
	InputMaterialName:      "input_material_name",
	InputRequiredQuantity:  "input_required_quantity",
	InputRequiredUnit:      "input_required_unit",
	DeliveryQuantity:       "delivery_quantity",
	UndeliveryQuantity:     "undelivery_quantity",
	PlanedDeliveryTime:     "planed_delivery_time",
	Note:                   "note",
	OperationStatus:        "operation_status",
	CreatedAt:              "created_at",
	UpdatedAt:              "updated_at",
	DeletedAt:              "deleted_at",
}

// NewTProcessOutsourcingOrderDao creates and returns a new DAO object for table data access.
func NewTProcessOutsourcingOrderDao() *TProcessOutsourcingOrderDao {
	return &TProcessOutsourcingOrderDao{
		group:   "default",
		table:   "t_process_outsourcing_order",
		columns: tProcessOutsourcingOrderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TProcessOutsourcingOrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TProcessOutsourcingOrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TProcessOutsourcingOrderDao) Columns() TProcessOutsourcingOrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TProcessOutsourcingOrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TProcessOutsourcingOrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TProcessOutsourcingOrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
